
brain:

    # Overrides
    overrides:
      allow_system_aiml: true
      allow_learn_aiml: true
      allow_learnf_aiml: true

    # Defaults
    # These have not been added to the system yet
    defaults:
      default-get: unknown
      default-property: unknown
      default-map: unknown
      learn-filename: y-bot-learnf.aiml
    # These have not been added to the system yet

    # Nodes
    nodes:
      pattern_nodes: $BOT_ROOT/config/pattern_nodes.conf
      template_nodes: $BOT_ROOT/config/template_nodes.conf

    files:
        aiml:
            files: $BOT_ROOT/aiml
            extension: .aiml
            directories: true
            errors: $BOT_ROOT/output/y-bot_errors.txt
            duplicates: $BOT_ROOT/output/y-bot_duplicates.txt
        sets:
            files: $BOT_ROOT/sets
            extension: .txt
            directories: false
        maps:
            files: $BOT_ROOT/maps
            extension: .txt
            directories: false
        denormal: $BOT_ROOT/config/denormal.txt
        normal: $BOT_ROOT/config/normal.txt
        gender: $BOT_ROOT/config/gender.txt
        person: $BOT_ROOT/config/person.txt
        person2: $BOT_ROOT/config/person2.txt
        predicates: $BOT_ROOT/config/predicates.txt
        pronouns: $BOT_ROOT/config/pronouns.txt
        properties: $BOT_ROOT/config/properties.txt
        triples: $BOT_ROOT/config/triples.txt
        preprocessors: $BOT_ROOT/config/preprocessors.conf
        postprocessors: $BOT_ROOT/config/test_postprocessors.conf

    services:
        REST:
            classname: programy.utils.services.rest.GenericRESTService
            method: GET
            host: 0.0.0.0
        Pannous:
            classname: programy.utils.services.pannous.PannousService
            url: http://weannie.pannous.com/api
        Pandora:
            classname: programy.utils.services.pandora.PandoraService
            url: http://www.pandorabots.com/pandora/talk-xml
        Wikipedia:
            classname: programy.utils.services.wikipediaservice.WikipediaService

bot:
    license_keys: $BOT_ROOT/config/license.keys
    prompt: ">>>"
    initial_question: Hi, how can I help you today?
    default_response: Sorry, I don't have an answer for that!
    empty_string_srai: YEMPTY
    exit_response: So long, and thanks for the fish!
    override_predicates: true
    max_recursion: 10

    spelling:
      classname: programy.utils.spelling.checker.SpellingChecker
      corpus: $BOT_ROOT/spelling/corpus.txt
      check_before: false
      check_and_retry: false


rest:
  host: 127.0.0.1
  port: 5000
  debug: false

webchat:
  host: 127.0.0.1
  port: 5000
  debug: false

twitter:
  polling: true
  polling_interval: 49
  streaming: false
  use_status: true
  use_direct_message: true
  auto_follow: true
  storage: file
  storage_location: $BOT_ROOT/storage/twitter.data
  welcome_message: Thanks for following me, send me a message and I'll try and help

facebook:
  polling: false
  polling_interval: 30
  streaming: true

xmpp:
  server: talk.google.com
  port: 5222
  xep_0030: true
  xep_0004: true
  xep_0060: true
  xep_0199: true